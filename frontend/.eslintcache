[{"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\index.js":"1","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\App.js":"2","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\store.js":"3","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Header.js":"5","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\RegisterScreen.js":"6","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\HomeScreen.js":"7","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\ProductScreen.js":"8","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\ProfileScreen.js":"9","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\LoginScreen.js":"10","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\CartScreen.js":"11","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\reducers\\userReducers.js":"12","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\reducers\\productsReducer.js":"13","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\reducers\\cartReducers.js":"14","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Message.js":"15","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Loader.js":"16","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\FormContainer.js":"17","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Rating.js":"18","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Product.js":"19","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\actions\\userActions.js":"20","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\actions\\productsAction.js":"21","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\actions\\cartActions.js":"22","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\constants\\userConstants.js":"23","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\constants\\cartConstants.js":"24","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\constants\\productsConstant.js":"25","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\ShippingScreen.js":"26","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\CheckoutSteps.js":"27","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\PayementScreen.js":"28","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\PlaceOrderScreen.js":"29","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\reducers\\orderReducer.js":"30","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\constants\\orderConstants.js":"31","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\actions\\orderActions.js":"32","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\OrderScreen.js":"33"},{"size":283,"mtime":1611257399736,"results":"34","hashOfConfig":"35"},{"size":1628,"mtime":1612412231413,"results":"36","hashOfConfig":"35"},{"size":1695,"mtime":1612775382961,"results":"37","hashOfConfig":"35"},{"size":371,"mtime":1611017180581,"results":"38","hashOfConfig":"35"},{"size":2393,"mtime":1611987127273,"results":"39","hashOfConfig":"35"},{"size":3439,"mtime":1612059755526,"results":"40","hashOfConfig":"35"},{"size":1022,"mtime":1611262953609,"results":"41","hashOfConfig":"35"},{"size":4380,"mtime":1611325304072,"results":"42","hashOfConfig":"35"},{"size":5927,"mtime":1612777500894,"results":"43","hashOfConfig":"35"},{"size":2294,"mtime":1612771094342,"results":"44","hashOfConfig":"35"},{"size":3908,"mtime":1611708863605,"results":"45","hashOfConfig":"35"},{"size":2309,"mtime":1612698947649,"results":"46","hashOfConfig":"35"},{"size":1042,"mtime":1611263473572,"results":"47","hashOfConfig":"35"},{"size":1322,"mtime":1612331996465,"results":"48","hashOfConfig":"35"},{"size":290,"mtime":1611262342132,"results":"49","hashOfConfig":"35"},{"size":475,"mtime":1611324264663,"results":"50","hashOfConfig":"35"},{"size":389,"mtime":1611979385555,"results":"51","hashOfConfig":"35"},{"size":1315,"mtime":1611327425504,"results":"52","hashOfConfig":"35"},{"size":1089,"mtime":1610832023965,"results":"53","hashOfConfig":"35"},{"size":4073,"mtime":1612778160390,"results":"54","hashOfConfig":"35"},{"size":1229,"mtime":1611265817664,"results":"55","hashOfConfig":"35"},{"size":1272,"mtime":1612331934183,"results":"56","hashOfConfig":"35"},{"size":878,"mtime":1612777902251,"results":"57","hashOfConfig":"35"},{"size":232,"mtime":1612331787522,"results":"58","hashOfConfig":"35"},{"size":354,"mtime":1611263212254,"results":"59","hashOfConfig":"35"},{"size":2713,"mtime":1612328249400,"results":"60","hashOfConfig":"35"},{"size":1580,"mtime":1612328184305,"results":"61","hashOfConfig":"35"},{"size":1651,"mtime":1612701810188,"results":"62","hashOfConfig":"35"},{"size":5861,"mtime":1612703376849,"results":"63","hashOfConfig":"35"},{"size":2617,"mtime":1612777879498,"results":"64","hashOfConfig":"35"},{"size":774,"mtime":1612777836903,"results":"65","hashOfConfig":"35"},{"size":3726,"mtime":1612775589009,"results":"66","hashOfConfig":"35"},{"size":7296,"mtime":1612730657191,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1ripn15",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"70"},"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\index.js",[],["143","144"],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\App.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\store.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Header.js",["145","146"],"import React from 'react'\r\n\r\nimport {LinkContainer} from 'react-router-bootstrap' \r\nimport {BrowserRouter as Router,Route} from \"react-router-dom\"\r\nimport {Navbar,Nav,Form,FormControl,Button,Container, NavDropdown} from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../actions/userActions'\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n    const userLogin=useSelector(state=>state.userLogin)\r\n    const {userInfo}=userLogin\r\n\r\n    const logoutHandler=()=>{\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>TechShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    \r\n                        <Form  inline>\r\n                         <FormControl type=\"text\" placeholder=\"Search product...\" className=\"mr-sm-2\" />\r\n                         <Button variant=\"outline-success\">Search</Button>\r\n                        </Form>\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to=\"/cart\">\r\n                                <Nav.Link ><i className='fas fa-shopping-cart'> </i> Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo?(\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                <LinkContainer to='/profile'>\r\n                                   <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ): <LinkContainer to=\"/login\">\r\n                            <Nav.Link ><i className='fas fa-user'> </i> Sign In</Nav.Link>    \r\n                            </LinkContainer>}\r\n                            \r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\HomeScreen.js",["147","148"],"import React,{useEffect, useState} from 'react'\r\nimport {Container,Row,Col} from \"react-bootstrap\"\r\nimport Product from \"../components/Product\"\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport { listProducts } from '../actions/productsAction'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\n\r\nconst HomeScreen = () => {\r\n   const dispatch=useDispatch()\r\n\r\n   const productList= useSelector(state => state.productList)\r\n   const {loading,error,products}=productList\r\n    useEffect(() => {\r\n       dispatch(listProducts())\r\n    },[dispatch])\r\n   \r\n    return (\r\n        <>\r\n            <h1>Latest Products</h1>\r\n            {loading?<Loader/>:error?<Message/>:\r\n            <Row>\r\n            {products.map((product)=>(\r\n                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                    <Product product={product}/>\r\n                </Col>\r\n            ))}\r\n            </Row>}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\ProductScreen.js",["149"],"import React,{useEffect,useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Row,Col,Image,ListGroup,Card,Button, ListGroupItem, Form} from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProductDetails} from '../actions/productsAction'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nconst ProductScreen = ({history,match}) => {\r\n   const [qty,setQty]=useState(1) \r\n\r\n   const dispatch=useDispatch()\r\n\r\n   const productDetails = useSelector(state => state.productDetails)\r\n   const {loading,error,product}=productDetails\r\n\r\n    useEffect(() => {\r\n       dispatch(listProductDetails(match.params.id))\r\n    },[dispatch,match.params.id])\r\n\r\n    const addToCartHandler=()=>{\r\n            history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <Link className=\"btn btn-light my-3\" to='/'>\r\n               Go Back\r\n           </Link>\r\n           {loading? <Loader/>:error? <Message variant='danger'>{error}</Message>:\r\n           <Row>\r\n           <Col md={6}>\r\n               <Image src={product.image} alt={product.name} fluid/>\r\n           </Col>\r\n           <Col md={3}>\r\n               <ListGroup variant='flush'>\r\n                   <ListGroup.Item>\r\n                       <h2>\r\n                           {product.name}\r\n                       </h2>\r\n                   </ListGroup.Item>\r\n                   <ListGroup.Item>\r\n                       <Rating\r\n                            value={product.rating}\r\n                            text={`${product.numReviews} reviews`}\r\n                            \r\n                       />\r\n                   </ListGroup.Item>\r\n                   <ListGroup.Item>\r\n                       Price:${product.price}\r\n                   </ListGroup.Item>\r\n                   <ListGroup.Item>\r\n                       Description:${product.description}\r\n                   </ListGroup.Item>\r\n               </ListGroup>\r\n           </Col>\r\n           <Col md={3}>\r\n               <Card>\r\n                   <ListGroup variant='flush'>\r\n                       <ListGroup.Item>\r\n                           <Row>\r\n                               <Col>\r\n                                    Price:\r\n                               </Col>\r\n                               <Col>\r\n                                    <strong>${product.price}</strong>\r\n                               </Col>\r\n                           </Row>\r\n                       </ListGroup.Item>\r\n                       <ListGroup.Item>\r\n                           <Row>\r\n                               <Col>\r\n                                    Status:\r\n                               </Col>\r\n                               <Col>\r\n                                   {product.countInStock>0 ? 'In Stock':'Out of Stock'}\r\n                               </Col>\r\n                           </Row>\r\n                       </ListGroup.Item>\r\n                        {product.countInStock>0 &&(\r\n                            <ListGroup>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Qty\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Form.Control as='select' value={qty} onChange={(e)=>\r\n                                        setQty(e.target.value)}> {\r\n                                        [...Array(product.countInStock).keys()].map((x)=>(\r\n                                            <option key={x+1} value={x+1}>{x+1}</option>\r\n                                           \r\n                                        ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup>\r\n                        )}\r\n                       <ListGroup.Item>\r\n                           <Button onClick={addToCartHandler} className='btn-block' type='button' disabled={product.countInStock===0}>Add to Cart</Button>\r\n                       </ListGroup.Item>\r\n                   </ListGroup>\r\n               </Card>\r\n           </Col>\r\n       </Row>}\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\ProfileScreen.js",["150","151"],"import React,{useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Form,Button,Row,Col, Table} from 'react-bootstrap'\r\nimport{useDispatch,useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {getUserDetails, updateUserProfile} from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrder } from '../actions/orderActions'\r\n\r\n\r\nconst ProfileScreen = ({location,history}) => {\r\n     const [name,setName]=useState('')\r\n\r\n     const [email,setEmail]=useState('')\r\n     const [password,setPassword]=useState('')\r\n     const [confirmPassword,setConfirmPassword]=useState('')\r\n     const [message,setMessage]=useState(null)\r\n\r\n\r\n     const dispatch = useDispatch()\r\n     const userDetails=useSelector(state=>state.userDetails)\r\n     const {loading,error,user}=userDetails\r\n     \r\n     const userLogin=useSelector(state=>state.userLogin)\r\n     const {userInfo}=userLogin\r\n\r\n     const userUpdateProfile=useSelector(state=>state.userUpdateProfile)\r\n     const {success}=userUpdateProfile\r\n\r\n     const orderListMy=useSelector(state=>state.orderListMy)\r\n     const {loading:loadingOrders,error:errorOrders,orders}=orderListMy\r\n     useEffect(() => {\r\n         if(!userInfo){\r\n             history.push('/login')\r\n         }else{\r\n             if(!user.name||success){\r\n                 dispatch({type:USER_UPDATE_PROFILE_RESET})\r\n                 dispatch(getUserDetails('profile'))\r\n                 dispatch(listMyOrder())\r\n             }else{\r\n                 setName(user.name)\r\n                 setEmail(user.email)\r\n             }\r\n\r\n         }\r\n     }, [dispatch,history,userInfo,user])\r\n\r\n\r\n     const submitHandler=(e)=>{\r\n         e.preventDefault()\r\n\r\n         if(password !==confirmPassword){\r\n             setMessage('Password do not match')\r\n         }else{\r\n            dispatch(updateUserProfile({id:user._id,name,email,password}))\r\n         }\r\n\r\n        \r\n     }\r\n    return <Row>\r\n        <Col md={3}>\r\n        <h2>User Profile</h2>  \r\n          {message && <Message variant='danger'>{message}</Message>}\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {success && <Message variant='success'>Profile Updated</Message>}\r\n\r\n          {loading && <Loader/>}\r\n          <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='name'>\r\n              <Form.Group controlId='name'>\r\n                  <Form.Label>\r\n                      Name \r\n                  </Form.Label>\r\n                  <Form.Control type='name' placeholder='Enter name' value={name}\r\n                  onChange={(e)=>setName(e.target.value)}>\r\n\r\n                  </Form.Control>\r\n              </Form.Group>\r\n                  <Form.Label>\r\n                      Email Address\r\n                  </Form.Label>\r\n                  <Form.Control type='email' placeholder='Enter email' value={email}\r\n                  onChange={(e)=>setEmail(e.target.value)}>\r\n\r\n                  </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='password'>\r\n                  <Form.Label>\r\n                     Password\r\n                  </Form.Label>\r\n                  <Form.Control type='password' placeholder='Enter password' value={password}\r\n                  onChange={(e)=>setPassword(e.target.value)}>\r\n\r\n                  </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='confirmPassword'>\r\n                  <Form.Label>\r\n                     Confirm Password\r\n                  </Form.Label>\r\n                  <Form.Control type='password' placeholder='Confirm Password' value={confirmPassword}\r\n                  onChange={(e)=>setConfirmPassword(e.target.value)}>\r\n\r\n                  </Form.Control>\r\n              </Form.Group>\r\n            <Button type='submit' variant='primary'>Update</Button>\r\n          </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2> My Order </h2>\r\n            {loadingOrders?<Loader/>:errorOrders?<Message variant='danger'>{errorOrders}</Message>:(\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order=>( \r\n                            <tr key={order.id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0,10)}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>{order.isPaid? order.paidAt.substring(0,10) :(\r\n                                    <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                )}</td>\r\n                                <td>{order.isDelivered? order.deliveredAt.substring(0,10) :(\r\n                                    <i className='fas fa-times' style={{color:' red'}}></i>\r\n                                )}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm' variant='light'>Details</Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </Col>\r\n    </Row>\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\reducers\\productsReducer.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Message.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Rating.js",["152"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({value,text,color}) => {\r\n    return (\r\n        <div className='rating'>\r\n           <span>\r\n                <i style={{color}} className ={value >=1 ? 'fas fa-star' : value>=0.5? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span> \r\n            <span>\r\n                <i style={{color}} className ={value >=2 ? 'fas fa-star' : value>=1.5? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span> \r\n            <span>\r\n                <i style={{color}} className ={value >=3 ? 'fas fa-star' : value>=2.5? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span> \r\n            <span>\r\n                <i style={{color}} className ={value >=4 ? 'fas fa-star' : value>=3.5? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span> \r\n            <span>\r\n                <i style={{color}} className ={value >=5 ? 'fas fa-star' : value>=4.5? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span> \r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\nRating.defaultProps={\r\n    color:'#f8e825',\r\n}\r\n// Rating.propTypes={\r\n//     value:PropTypes.number.isRequired,\r\n//     text:PropTypes.string.isRequired,\r\n//     color:PropTypes.string,\r\n// }\r\n\r\nexport default Rating\r\n","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Product.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\actions\\productsAction.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\constants\\productsConstant.js",[],["153","154"],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\PayementScreen.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\PlaceOrderScreen.js",["155"],"import React,{useEffect} from 'react'\r\nimport {Button,Row,Col,ListGroup,Image,Card, NavLink} from 'react-bootstrap'\r\nimport{useDispatch,useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n    const dispatch=useDispatch()\r\n\r\n    const cart =useSelector(state=>state.cart)\r\n    const addDecimals=(num)=>{\r\n        return (Math.round(num*100)/100).toFixed(2)\r\n    }\r\n    cart.itemsPrice=addDecimals(cart.cartItems.reduce(\r\n        (acc,item)=> acc+ item.price*item.qty,0\r\n    ))\r\n    cart.shippingPrice=addDecimals(cart.itemsPrice>100 ? 0 :100)\r\n    cart.taxPrice=addDecimals(Number((0.15*cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice=(Number(cart.itemsPrice)+Number(cart.shippingPrice)+Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    const orderCreate=useSelector(state=>state.orderCreate)\r\n    const{order,success,error}=orderCreate\r\n\r\n    useEffect(()=>{\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line \r\n    },[history,success])\r\n\r\n    const placeOrderHandler=()=>{\r\n       dispatch(createOrder({\r\n           orderItems:cart.cartItems,\r\n           shippingAddress:cart.shippingAddress,\r\n           paymentMethod:cart.paymentMethod,\r\n           itemsPrice:cart.itemsPrice,\r\n           shippingPrice:cart.shippingPrice,\r\n           taxPrice:cart.taxPrice,\r\n           totalPrice:cart.totalPrice,\r\n\r\n\r\n\r\n       }))\r\n\r\n    }\r\n    return (\r\n        <>\r\n        <CheckoutSteps step1 step2 step3 step4/>\r\n         <Row>\r\n             <Col md={8}>\r\n                 <ListGroup variant ='flush'>\r\n                     <ListGroup.Item>\r\n                         <h2>Shipping</h2>\r\n                         <p2>\r\n                             <strong> Address: </strong>\r\n                             {cart.shippingAddress.address},{cart.shippingAddress.city}\r\n                             ,{cart.shippingAddress.postalCode},{cart.shippingAddress.country}\r\n                         </p2>\r\n                     </ListGroup.Item>\r\n                     <ListGroup.Item>\r\n                        <h2>Payment Method</h2>\r\n                        <strong>Method: </strong>\r\n                        {cart.paymentMethod}\r\n                     </ListGroup.Item>\r\n                     <ListGroup.Item>\r\n                         <h2>Order Items</h2>\r\n                         {cart.cartItems.length===0?<Message>Your cart is empty</Message>:(\r\n                             <ListGroup variant ='flush'>\r\n                                 {cart.cartItems.map((item,index)=>(\r\n                                     <ListGroup.Item key={index}>\r\n                                         <Row>\r\n                                             <Col md={1}>\r\n                                              <Image src={item.image} alt={item.name} fluid rounded />\r\n                                           </Col>\r\n                                           <Col>\r\n                                                <Link to ={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                           </Col>\r\n                                           <Col md={4}>\r\n                                               {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                           </Col>\r\n                                         </Row>\r\n                                     </ListGroup.Item>\r\n                                 ))}\r\n                             </ListGroup>\r\n                         )}\r\n                     </ListGroup.Item>\r\n                 </ListGroup>\r\n             </Col>\r\n             <Col md={4}>\r\n                 <Card>\r\n                     <ListGroup variant='flush'>\r\n                         <ListGroup.Item>\r\n                             <h2>\r\n                                 Order Summary\r\n                             </h2>\r\n                         </ListGroup.Item>\r\n                         <ListGroup.Item>\r\n                             <Row>\r\n                                 <Col> Items</Col>\r\n                                 <Col> ${cart.itemsPrice}</Col>\r\n                             </Row>\r\n                         </ListGroup.Item>\r\n                         <ListGroup.Item>\r\n                             <Row>\r\n                                 <Col> Shipping</Col>\r\n                                 <Col> ${cart.shippingPrice}</Col>\r\n                             </Row>\r\n                         </ListGroup.Item>\r\n                         <ListGroup.Item>\r\n                             <Row>\r\n                                 <Col> Tax</Col>\r\n                                 <Col> ${cart.taxPrice}</Col>\r\n                             </Row>\r\n                         </ListGroup.Item>\r\n                         <ListGroup.Item>\r\n                             <Row>\r\n                                 <Col> Total</Col>\r\n                                 <Col> ${cart.totalPrice}</Col>\r\n                             </Row>\r\n                         </ListGroup.Item>\r\n                         <ListGroup.Item> {error && <Message variant='danger'>{error}</Message>}</ListGroup.Item>\r\n                         <ListGroup.Item>\r\n                             <Button type='button' className='btn-block' disabled={cart.cartItems===0} onClick={placeOrderHandler}>Place Order</Button>\r\n                         </ListGroup.Item>\r\n                         \r\n                     </ListGroup>\r\n                 </Card>\r\n             </Col>\r\n        </Row>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\reducers\\orderReducer.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\OrderScreen.js",["156","157"],"import React,{useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport {PayPalButton}from 'react-paypal-button-v2'\r\nimport {Button,Row,Col,ListGroup,Image,Card, NavLink} from 'react-bootstrap'\r\nimport{useDispatch,useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails,payOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({match}) => {\r\n    const orderId=match.params.id\r\n    \r\n    const [sdkReady,setSdkReady]=useState(false)\r\n\r\n    const dispatch=useDispatch()  \r\n   \r\n    const orderDetails=useSelector(state=>state.orderDetails)\r\n    const{order,loading,error}=orderDetails\r\n\r\n    const orderPay=useSelector(state=>state.orderPay)\r\n    const{loading:loadingPay,success:successPay}=orderPay\r\n\r\n if(!loading){\r\n    const addDecimals=(num)=>{\r\n        return (Math.round(num*100)/100).toFixed(2)\r\n    }\r\n    order.itemsPrice=addDecimals(order.orderItems.reduce(\r\n        (acc,item)=> acc+ item.price*item.qty,0\r\n    ))\r\n    }\r\n    useEffect(()=>{\r\n        const addPayPalScript = async() => {\r\n            const {data:clientId} = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type='text/javascript'\r\n            script.src=`https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async=true\r\n            script.onload=()=>{\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n        if(!order || successPay){\r\n        dispatch({type:ORDER_PAY_RESET})\r\n        dispatch(getOrderDetails(orderId))\r\n    }else if(!order.isPaid){\r\n        if(!window.paypal){\r\n        addPayPalScript()\r\n    }else{\r\n        setSdkReady(true)\r\n    }}\r\n    },[dispatch,orderId,successPay,order])\r\n\r\n\r\n    const successPaymentHandler=(paymentResult)=>{\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    return loading?<Loader/>:error ? <Message variant='danger'>{error}</Message>:<>\r\n    <h1>Order {order._id}</h1>\r\n    <Row>\r\n             <Col md={8}>\r\n                 <ListGroup variant ='flush'>\r\n                     <ListGroup.Item>\r\n                         <h2>Shipping</h2>\r\n                        <p><strong>Name: </strong>{order.user.name}</p>\r\n                        <p><strong>Email: </strong>{' '}<a href={`mailto:${order.user.email}`}>{order.user.email} </a></p>\r\n                         \r\n                         <p>\r\n                             <strong> Address: </strong>\r\n                             {order.shippingAddress.address},{order.shippingAddress.city}\r\n                             ,{order.shippingAddress.postalCode},{order.shippingAddress.country}\r\n                         </p>\r\n                         {order.isDelivered?(\r\n                            <Message variant='success'>Delivered on{order.deliveredAt}</Message>):(\r\n                                <Message variant='danger'>Not Delivered</Message>\r\n                            )\r\n                        }\r\n                     </ListGroup.Item>\r\n                     <ListGroup.Item>\r\n                        <h2>Payment Method</h2>\r\n                        <p>\r\n                        <strong>Method: </strong>\r\n                        {order.paymentMethod}</p>\r\n                        {order.isPaid?(\r\n                            <Message variant='success'>Paid on {order.paidAt}</Message>):(\r\n                                <Message variant='danger'>Not Paid</Message>\r\n                            )\r\n                        }\r\n                     </ListGroup.Item>\r\n                     <ListGroup.Item>\r\n                         <h2>Order Items</h2>\r\n                         {order.orderItems.length===0?<Message>Order is empty</Message>:(\r\n                             <ListGroup variant ='flush'>\r\n                                 {order.orderItems.map((item,index)=>(\r\n                                     <ListGroup.Item key={index}>\r\n                                         <Row>\r\n                                             <Col md={1}>\r\n                                              <Image src={item.image} alt={item.name} fluid rounded />\r\n                                           </Col>\r\n                                           <Col>\r\n                                                <Link to ={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                           </Col>\r\n                                           <Col md={4}>\r\n                                               {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                           </Col>\r\n                                         </Row>\r\n                                     </ListGroup.Item>\r\n                                 ))}\r\n                             </ListGroup>\r\n                         )}\r\n                     </ListGroup.Item>\r\n                 </ListGroup>\r\n             </Col>\r\n             <Col md={4}>\r\n                 <Card>\r\n                     <ListGroup variant='flush'>\r\n                         <ListGroup.Item>\r\n                             <h2>\r\n                                 Order Summary\r\n                             </h2>\r\n                         </ListGroup.Item>\r\n                         <ListGroup.Item>\r\n                             <Row>\r\n                                 <Col> Items</Col>\r\n                                 <Col> ${order.itemsPrice}</Col>\r\n                             </Row>\r\n                         </ListGroup.Item>\r\n                         <ListGroup.Item>\r\n                             <Row>\r\n                                 <Col> Shipping</Col>\r\n                                 <Col> ${order.shippingPrice}</Col>\r\n                             </Row>\r\n                         </ListGroup.Item>\r\n                         <ListGroup.Item>\r\n                             <Row>\r\n                                 <Col> Tax</Col>\r\n                                 <Col> ${order.taxPrice}</Col>\r\n                             </Row>\r\n                         </ListGroup.Item>\r\n                         <ListGroup.Item>\r\n                             <Row>\r\n                                 <Col> Total</Col>\r\n                                 <Col> ${order.totalPrice}</Col>\r\n                             </Row>\r\n                         </ListGroup.Item>   \r\n                         {!order.isPaid && (\r\n                             <ListGroup.Item>\r\n                                 {loadingPay && <Loader/>}\r\n                                 {!sdkReady ? <Loader/>:(\r\n                                     <PayPalButton amount={order.totalPrice}\r\n                                     onSuccess={successPaymentHandler}/>\r\n                                 )}\r\n                             </ListGroup.Item>\r\n                         )}                     \r\n                     </ListGroup>\r\n                 </Card>\r\n             </Col>\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default OrderScreen\r\n",{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":4,"column":26,"nodeType":"164","messageId":"165","endLine":4,"endColumn":32},{"ruleId":"162","severity":1,"message":"166","line":4,"column":33,"nodeType":"164","messageId":"165","endLine":4,"endColumn":38},{"ruleId":"162","severity":1,"message":"167","line":1,"column":26,"nodeType":"164","messageId":"165","endLine":1,"endColumn":34},{"ruleId":"162","severity":1,"message":"168","line":2,"column":9,"nodeType":"164","messageId":"165","endLine":2,"endColumn":18},{"ruleId":"162","severity":1,"message":"169","line":3,"column":46,"nodeType":"164","messageId":"165","endLine":3,"endColumn":59},{"ruleId":"162","severity":1,"message":"170","line":2,"column":9,"nodeType":"164","messageId":"165","endLine":2,"endColumn":13},{"ruleId":"171","severity":1,"message":"172","line":48,"column":9,"nodeType":"173","endLine":48,"endColumn":41,"suggestions":"174"},{"ruleId":"162","severity":1,"message":"175","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":17},{"ruleId":"158","replacedBy":"176"},{"ruleId":"160","replacedBy":"177"},{"ruleId":"162","severity":1,"message":"178","line":2,"column":46,"nodeType":"164","messageId":"165","endLine":2,"endColumn":53},{"ruleId":"162","severity":1,"message":"179","line":4,"column":9,"nodeType":"164","messageId":"165","endLine":4,"endColumn":15},{"ruleId":"162","severity":1,"message":"178","line":4,"column":46,"nodeType":"164","messageId":"165","endLine":4,"endColumn":53},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'useState' is defined but never used.","'Container' is defined but never used.","'ListGroupItem' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'success'. Either include it or remove the dependency array.","ArrayExpression",["182"],"'PropTypes' is defined but never used.",["180"],["181"],"'NavLink' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},"Update the dependencies array to be: [dispatch, history, userInfo, user, success]",{"range":"185","text":"186"},[1770,1802],"[dispatch, history, userInfo, user, success]"]