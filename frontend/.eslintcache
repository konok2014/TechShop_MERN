[{"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\index.js":"1","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\App.js":"2","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\store.js":"3","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Header.js":"5","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\RegisterScreen.js":"6","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\HomeScreen.js":"7","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\ProductScreen.js":"8","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\ProfileScreen.js":"9","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\LoginScreen.js":"10","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\CartScreen.js":"11","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\reducers\\userReducers.js":"12","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\reducers\\productsReducer.js":"13","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\reducers\\cartReducers.js":"14","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Message.js":"15","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Loader.js":"16","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\FormContainer.js":"17","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Rating.js":"18","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Product.js":"19","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\actions\\userActions.js":"20","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\actions\\productsAction.js":"21","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\actions\\cartActions.js":"22","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\constants\\userConstants.js":"23","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\constants\\cartConstants.js":"24","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\constants\\productsConstant.js":"25","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\ShippingScreen.js":"26","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\CheckoutSteps.js":"27","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\PayementScreen.js":"28","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\PlaceOrderScreen.js":"29","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\reducers\\orderReducer.js":"30","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\constants\\orderConstants.js":"31","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\actions\\orderActions.js":"32","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\OrderScreen.js":"33","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\UserListScreen.js":"34","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\UserEditScreen.js":"35","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\ProductListScreen.js":"36","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\ProductEditScreen.js":"37","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\OrderListScreen.js":"38","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\SearchBox.js":"39","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Paginate.js":"40","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\ProductCarousel.js":"41","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Meta.js":"42"},{"size":283,"mtime":1611257399736,"results":"43","hashOfConfig":"44"},{"size":2698,"mtime":1613510512682,"results":"45","hashOfConfig":"44"},{"size":2295,"mtime":1613450805578,"results":"46","hashOfConfig":"44"},{"size":371,"mtime":1611017180581,"results":"47","hashOfConfig":"44"},{"size":3130,"mtime":1613412730588,"results":"48","hashOfConfig":"44"},{"size":3456,"mtime":1613216907935,"results":"49","hashOfConfig":"44"},{"size":1638,"mtime":1613465434980,"results":"50","hashOfConfig":"44"},{"size":8128,"mtime":1613483613816,"results":"51","hashOfConfig":"44"},{"size":5930,"mtime":1613216973969,"results":"52","hashOfConfig":"44"},{"size":2294,"mtime":1612771094342,"results":"53","hashOfConfig":"44"},{"size":3908,"mtime":1611708863605,"results":"54","hashOfConfig":"44"},{"size":3874,"mtime":1613378519001,"results":"55","hashOfConfig":"44"},{"size":4033,"mtime":1613450769635,"results":"56","hashOfConfig":"44"},{"size":1500,"mtime":1613477034279,"results":"57","hashOfConfig":"44"},{"size":290,"mtime":1611262342132,"results":"58","hashOfConfig":"44"},{"size":475,"mtime":1611324264663,"results":"59","hashOfConfig":"44"},{"size":389,"mtime":1611979385555,"results":"60","hashOfConfig":"44"},{"size":1315,"mtime":1613373748731,"results":"61","hashOfConfig":"44"},{"size":1089,"mtime":1610832023965,"results":"62","hashOfConfig":"44"},{"size":6635,"mtime":1613484542886,"results":"63","hashOfConfig":"44"},{"size":5438,"mtime":1613484379778,"results":"64","hashOfConfig":"44"},{"size":1272,"mtime":1612331934183,"results":"65","hashOfConfig":"44"},{"size":1458,"mtime":1613070290568,"results":"66","hashOfConfig":"44"},{"size":276,"mtime":1613477008058,"results":"67","hashOfConfig":"44"},{"size":1476,"mtime":1613450597313,"results":"68","hashOfConfig":"44"},{"size":2713,"mtime":1612328249400,"results":"69","hashOfConfig":"44"},{"size":1580,"mtime":1612328184305,"results":"70","hashOfConfig":"44"},{"size":1651,"mtime":1612701810188,"results":"71","hashOfConfig":"44"},{"size":6251,"mtime":1613485710991,"results":"72","hashOfConfig":"44"},{"size":4136,"mtime":1613509318459,"results":"73","hashOfConfig":"44"},{"size":1222,"mtime":1613477201876,"results":"74","hashOfConfig":"44"},{"size":5610,"mtime":1613509528494,"results":"75","hashOfConfig":"44"},{"size":8319,"mtime":1613486111964,"results":"76","hashOfConfig":"44"},{"size":3195,"mtime":1613067961392,"results":"77","hashOfConfig":"44"},{"size":3688,"mtime":1613216942124,"results":"78","hashOfConfig":"44"},{"size":4554,"mtime":1613508436738,"results":"79","hashOfConfig":"44"},{"size":7209,"mtime":1613217841287,"results":"80","hashOfConfig":"44"},{"size":3477,"mtime":1613510968131,"results":"81","hashOfConfig":"44"},{"size":872,"mtime":1613411259534,"results":"82","hashOfConfig":"44"},{"size":730,"mtime":1613510575794,"results":"83","hashOfConfig":"44"},{"size":1279,"mtime":1613465232218,"results":"84","hashOfConfig":"44"},{"size":549,"mtime":1613464906068,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1ripn15",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\index.js",[],["177","178"],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\App.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\store.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Header.js",["179","180","181","182"],"import React from 'react'\r\nimport {Route} from 'react-router-dom'\r\nimport {LinkContainer} from 'react-router-bootstrap' \r\nimport {BrowserRouter as Router,} from \"react-router-dom\"\r\nimport {Navbar,Nav,Form,FormControl,Button,Container, NavDropdown} from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n    const userLogin=useSelector(state=>state.userLogin)\r\n    const {userInfo}=userLogin\r\n\r\n    const logoutHandler=()=>{\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>TechShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    \r\n                        <Route render={({history}) => <SearchBox history={history} />} />\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to=\"/cart\">\r\n                                <Nav.Link ><i className='fas fa-shopping-cart'> </i> Cart</Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo?(\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                <LinkContainer to='/profile'>\r\n                                   <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ): <LinkContainer to=\"/login\">\r\n                            <Nav.Link ><i className='fas fa-user'> </i> Sign In</Nav.Link>    \r\n                            </LinkContainer>}\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                <LinkContainer to='/admin/userlist'>\r\n                                   <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/admin/productlist'>\r\n                                   <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/admin/orderlist'>\r\n                                   <NavDropdown.Item>Orders </NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                </NavDropdown>     \r\n                            )}\r\n                            \r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\HomeScreen.js",["183","184","185"],"import React,{useEffect, useState} from 'react'\r\nimport {Helmet} from 'react-helmet'\r\nimport {Link} from 'react-router-dom'\r\nimport {Container,Row,Col} from \"react-bootstrap\"\r\nimport Product from \"../components/Product\"\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport { listProducts } from '../actions/productsAction'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport Paginate from '../components/Paginate'\r\nimport Message from '../components/Message'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\n\r\n\r\nconst HomeScreen = ({match}) => {\r\n    const keyword = match.params.keyword\r\n\r\n    const pageNumber=match.params.pageNumber || 1\r\n   const dispatch=useDispatch()\r\n\r\n   const productList= useSelector(state => state.productList)\r\n   const {loading,error,products,page,pages}=productList\r\n    useEffect(() => {\r\n       dispatch(listProducts(keyword,pageNumber))\r\n    },[dispatch, keyword,pageNumber])\r\n   \r\n    return (\r\n        <>  \r\n        <Meta/>\r\n        {!keyword ?<ProductCarousel/>:<Link to ='/' className='btn btn-light'>\r\n            Go Back</Link>}\r\n            <h2>Latest Products</h2>\r\n            {loading?<Loader/>:error?<Message/>:\r\n            <>\r\n            <Row>\r\n            {products.map((product)=>(\r\n                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                    <Product product={product}/>\r\n                </Col>\r\n            ))}\r\n            </Row>\r\n            <Paginate pages={pages} page={page} keyword={keyword ?keyword:''}/>\r\n            </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\ProductScreen.js",["186","187"],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\ProfileScreen.js",["188","189"],"import React,{useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {Form,Button,Row,Col, Table} from 'react-bootstrap'\r\nimport{useDispatch,useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {getUserDetails, updateUserProfile} from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { listMyOrder } from '../actions/orderActions'\r\n\r\n\r\nconst ProfileScreen = ({location,history}) => {\r\n     const [name,setName]=useState('')\r\n\r\n     const [email,setEmail]=useState('')\r\n     const [password,setPassword]=useState('')\r\n     const [confirmPassword,setConfirmPassword]=useState('')\r\n     const [message,setMessage]=useState(null)\r\n\r\n\r\n     const dispatch = useDispatch()\r\n     const userDetails=useSelector(state=>state.userDetails)\r\n     const {loading,error,user}=userDetails\r\n     \r\n     const userLogin=useSelector(state=>state.userLogin)\r\n     const {userInfo}=userLogin\r\n\r\n     const userUpdateProfile=useSelector(state=>state.userUpdateProfile)\r\n     const {success}=userUpdateProfile\r\n\r\n     const orderListMy=useSelector(state=>state.orderListMy)\r\n     const {loading:loadingOrders,error:errorOrders,orders}=orderListMy\r\n     useEffect(() => {\r\n         if(!userInfo){\r\n             history.push('/login')\r\n         }else{\r\n             if(!user.name||success){\r\n                 dispatch({type:USER_UPDATE_PROFILE_RESET})\r\n                 dispatch(getUserDetails('profile'))\r\n                 dispatch(listMyOrder())\r\n             }else{\r\n                 setName(user.name)\r\n                 setEmail(user.email)\r\n             }\r\n\r\n         }\r\n     }, [dispatch,history,userInfo,user])\r\n\r\n\r\n     const submitHandler=(e)=>{\r\n         e.preventDefault()\r\n\r\n         if(password !==confirmPassword){\r\n             setMessage('Password do not match')\r\n         }else{\r\n            dispatch(updateUserProfile({id:user._id,name,email,password}))\r\n         }\r\n\r\n        \r\n     }\r\n    return <Row>\r\n        <Col md={3}>\r\n        <h2>User Profile</h2>  \r\n          {message && <Message variant='danger'>{message}</Message>}\r\n          {error && <Message variant='danger'>{error}</Message>}\r\n          {success && <Message variant='success'>Profile Updated</Message>}\r\n\r\n          {loading && <Loader/>}\r\n          <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='name'>\r\n\r\n                  <Form.Label>\r\n                      Name \r\n                  </Form.Label>\r\n                  <Form.Control type='name' placeholder='Enter name' value={name}\r\n                  onChange={(e)=>setName(e.target.value)}>\r\n\r\n                  </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='email'>\r\n                  <Form.Label>\r\n                      Email Address\r\n                  </Form.Label>\r\n                  <Form.Control type='email' placeholder='Enter email' value={email}\r\n                  onChange={(e)=>setEmail(e.target.value)}>\r\n\r\n                  </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='password'>\r\n                  <Form.Label>\r\n                     Password\r\n                  </Form.Label>\r\n                  <Form.Control type='password' placeholder='Enter password' value={password}\r\n                  onChange={(e)=>setPassword(e.target.value)}>\r\n\r\n                  </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId='confirmPassword'>\r\n                  <Form.Label>\r\n                     Confirm Password\r\n                  </Form.Label>\r\n                  <Form.Control type='password' placeholder='Confirm Password' value={confirmPassword}\r\n                  onChange={(e)=>setConfirmPassword(e.target.value)}>\r\n\r\n                  </Form.Control>\r\n              </Form.Group>\r\n            <Button type='submit' variant='primary'>Update</Button>\r\n          </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2> My Order </h2>\r\n            {loadingOrders?<Loader/>:errorOrders?<Message variant='danger'>{errorOrders}</Message>:(\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order=>( \r\n                            <tr key={order.id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0,10)}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>{order.isPaid? order.paidAt.substring(0,10) :(\r\n                                    <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                )}</td>\r\n                                <td>{order.isDelivered? order.deliveredAt.substring(0,10) :(\r\n                                    <i className='fas fa-times' style={{color:' red'}}></i>\r\n                                )}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm' variant='light'>Details</Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </Col>\r\n    </Row>\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\reducers\\productsReducer.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Message.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Rating.js",["190"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({value,text,color}) => {\r\n    return (\r\n        <div className='rating'>\r\n           <span>\r\n                <i style={{color}} className ={value >=1 ? 'fas fa-star' : value>=0.5? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span> \r\n            <span>\r\n                <i style={{color}} className ={value >=2 ? 'fas fa-star' : value>=1.5? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span> \r\n            <span>\r\n                <i style={{color}} className ={value >=3 ? 'fas fa-star' : value>=2.5? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span> \r\n            <span>\r\n                <i style={{color}} className ={value >=4 ? 'fas fa-star' : value>=3.5? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span> \r\n            <span>\r\n                <i style={{color}} className ={value >=5 ? 'fas fa-star' : value>=4.5? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span> \r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\nRating.defaultProps={\r\n    color:'#f8e825',\r\n}\r\n// Rating.propTypes={\r\n//     value:PropTypes.number.isRequired,\r\n//     text:PropTypes.string.isRequired,\r\n//     color:PropTypes.string,\r\n// }\r\n\r\nexport default Rating\r\n","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Product.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\actions\\userActions.js",["191"],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\actions\\productsAction.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\constants\\productsConstant.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\PayementScreen.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\PlaceOrderScreen.js",["192"],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\reducers\\orderReducer.js",["193"],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\OrderScreen.js",["194"],"import React,{useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport {PayPalButton}from 'react-paypal-button-v2'\r\nimport {Button,Row,Col,ListGroup,Image,Card, NavLink} from 'react-bootstrap'\r\nimport{useDispatch,useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails,payOrder,deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET,ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({match}) => {\r\n    const orderId=match.params.id\r\n    \r\n    const [sdkReady,setSdkReady]=useState(false)\r\n\r\n    const dispatch=useDispatch()  \r\n   \r\n    const userLogin=useSelector(state=>state.userLogin)\r\n    const{userInfo}=userLogin\r\n   \r\n    const orderDetails=useSelector(state=>state.orderDetails)\r\n    const{order,loading,error}=orderDetails\r\n\r\n    const orderPay=useSelector(state=>state.orderPay)\r\n    const{loading:loadingPay,success:successPay}=orderPay\r\n\r\n    const orderDeliver=useSelector(state=>state.orderDeliver)\r\n    const{loading:loadingDeliver,success:successDeliver}=orderDeliver\r\n\r\n if(!loading){\r\n    const addDecimals=(num)=>{\r\n        return (Math.round(num*100)/100).toFixed(2)\r\n    }\r\n    order.itemsPrice=addDecimals(order.orderItems.reduce(\r\n        (acc,item)=> acc+ item.price*item.qty,0\r\n    ))\r\n    }\r\n    useEffect(()=>{\r\n        const addPayPalScript = async() => {\r\n            const {data:clientId} = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type='text/javascript'\r\n            script.src=`https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async=true\r\n            script.onload=()=>{\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n        if(!order || successPay ||successDeliver){\r\n        dispatch({type:ORDER_PAY_RESET})\r\n        dispatch({type:ORDER_DELIVER_RESET})\r\n        dispatch(getOrderDetails(orderId))\r\n    }else if(!order.isPaid){\r\n        if(!window.paypal){\r\n        addPayPalScript()\r\n    }else{\r\n        setSdkReady(true)\r\n    }}\r\n    },[dispatch, orderId, successPay, order, successDeliver])\r\n\r\n\r\n    const successPaymentHandler=(paymentResult)=>{\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler=()=>{\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading?<Loader/>:error ? <Message variant='danger'>{error}</Message>:<>\r\n    <h1>Order {order._id}</h1>\r\n    <Row>\r\n             <Col md={8}>\r\n                 <ListGroup variant ='flush'>\r\n                     <ListGroup.Item>\r\n                         <h2>Shipping</h2>\r\n                        <p><strong>Name: </strong>{order.user.name}</p>\r\n                        <p><strong>Email: </strong>{' '}<a href={`mailto:${order.user.email}`}>{order.user.email} </a></p>\r\n                         \r\n                         <p>\r\n                             <strong> Address: </strong>\r\n                             {order.shippingAddress.address},{order.shippingAddress.city}\r\n                             ,{order.shippingAddress.postalCode},{order.shippingAddress.country}\r\n                         </p>\r\n                         {order.isDelivered?(\r\n                            <Message variant='success'>Delivered on {order.deliveredAt}</Message>):(\r\n                                <Message variant='danger'>Not Delivered</Message>\r\n                            )\r\n                        }\r\n                     </ListGroup.Item>\r\n                     <ListGroup.Item>\r\n                        <h2>Payment Method</h2>\r\n                        <p>\r\n                        <strong>Method: </strong>\r\n                        {order.paymentMethod}</p>\r\n                        {order.isPaid?(\r\n                            <Message variant='success'>Paid on {order.paidAt}</Message>):(\r\n                                <Message variant='danger'>Not Paid</Message>\r\n                            )\r\n                        }\r\n                     </ListGroup.Item>\r\n                     <ListGroup.Item>\r\n                         <h2>Order Items</h2>\r\n                         {order.orderItems.length===0?<Message>Order is empty</Message>:(\r\n                             <ListGroup variant ='flush'>\r\n                                 {order.orderItems.map((item,index)=>(\r\n                                     <ListGroup.Item key={index}>\r\n                                         <Row>\r\n                                             <Col md={1}>\r\n                                              <Image src={item.image} alt={item.name} fluid rounded />\r\n                                           </Col>\r\n                                           <Col>\r\n                                                <Link to ={`/product/${item.product}`}>\r\n                                                    {item.name}\r\n                                                </Link>\r\n                                           </Col>\r\n                                           <Col md={4}>\r\n                                               {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                           </Col>\r\n                                         </Row>\r\n                                     </ListGroup.Item>\r\n                                 ))}\r\n                             </ListGroup>\r\n                         )}\r\n                     </ListGroup.Item>\r\n                 </ListGroup>\r\n             </Col>\r\n             <Col md={4}>\r\n                 <Card>\r\n                     <ListGroup variant='flush'>\r\n                         <ListGroup.Item>\r\n                             <h2>\r\n                                 Order Summary\r\n                             </h2>\r\n                         </ListGroup.Item>\r\n                         <ListGroup.Item>\r\n                             <Row>\r\n                                 <Col> Items</Col>\r\n                                 <Col> ${order.itemsPrice}</Col>\r\n                             </Row>\r\n                         </ListGroup.Item>\r\n                         <ListGroup.Item>\r\n                             <Row>\r\n                                 <Col> Shipping</Col>\r\n                                 <Col> ${order.shippingPrice}</Col>\r\n                             </Row>\r\n                         </ListGroup.Item>\r\n                         <ListGroup.Item>\r\n                             <Row>\r\n                                 <Col> Tax</Col>\r\n                                 <Col> ${order.taxPrice}</Col>\r\n                             </Row>\r\n                         </ListGroup.Item>\r\n                         <ListGroup.Item>\r\n                             <Row>\r\n                                 <Col> Total</Col>\r\n                                 <Col> ${order.totalPrice}</Col>\r\n                             </Row>\r\n                         </ListGroup.Item>   \r\n                         {!order.isPaid && (\r\n                             <ListGroup.Item>\r\n                                 {loadingPay && <Loader/>}\r\n                                 {!sdkReady ? <Loader/>:(\r\n                                     <PayPalButton amount={order.totalPrice}\r\n                                     onSuccess={successPaymentHandler}/>\r\n                                 )}\r\n                             </ListGroup.Item>\r\n                         )}   \r\n                         {loadingDeliver && <Loader/>}\r\n                         {userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                             <ListGroup.Item>\r\n                                <Button type='Button' className='btn btn-block' onClick={deliverHandler}>\r\n                                    Mark as Delivered\r\n                                </Button>\r\n                             </ListGroup.Item>\r\n                         )}                  \r\n                     </ListGroup>\r\n                 </Card>\r\n             </Col>\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default OrderScreen\r\n","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\UserListScreen.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\UserEditScreen.js",["195","196","197","198"],"import React,{useState,useEffect} from 'react'\r\nimport {Form,Button,} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport{useDispatch,useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {getUserDetails, updateUser} from '../actions/userActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({match,history}) => {\r\n     const userId=match.params.id\r\n\r\n     const [name,setName]=useState('')\r\n\r\n     const [email,setEmail]=useState('')\r\n     const [password,setPassword]=useState('')\r\n     const [isAdmin,setIsAdmin]=useState(false)\r\n     const [message,setMessage]=useState(null)\r\n\r\n\r\n     const dispatch = useDispatch()\r\n\r\n     const userDetails=useSelector(state=>state.userDetails)\r\n     const {loading,error,user}=userDetails\r\n\r\n     const userUpdate=useSelector(state=>state.userUpdate)\r\n     const {loading:loadingUpdate,error:errorUpdate,success:successUpdate}=userUpdate\r\n     \r\n     \r\n     useEffect(() => {\r\n        if(successUpdate){\r\n            dispatch({type:USER_UPDATE_RESET})\r\n            history.push('/admin/userlist')\r\n        }else{\r\n            if (!user.name || user._id !==userId){\r\n                dispatch(getUserDetails(userId))\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n         \r\n     }, [dispatch, userId, user, successUpdate, history])\r\n\r\n\r\n     const submitHandler=(e)=>{\r\n         e.preventDefault()\r\n         dispatch(updateUser({_id:userId,name,email,isAdmin}))\r\n\r\n     }\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <h1>Edit User</h1> \r\n                {loadingUpdate && <Loader/>}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                 \r\n                {loading?<Loader/>:error?<Message variant='danger'>{error}</Message>:(\r\n                <FormContainer>\r\n                \r\n                \r\n               \r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                   \r\n                        <Form.Label>\r\n                            Name \r\n                        </Form.Label>\r\n                        <Form.Control type='name' placeholder='Enter name' value={name}\r\n                        onChange={(e)=>setName(e.target.value)}>\r\n      \r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>\r\n                            Email Address\r\n                        </Form.Label>\r\n                        <Form.Control type='email' placeholder='Enter email' value={email}\r\n                        onChange={(e)=>setEmail(e.target.value)}>\r\n      \r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='isAdmin'>\r\n                        <Form.Check type='checkbox' label='Is Admin' checked={isAdmin} onChange={(e)=>setIsAdmin(e.target.checked)}>                         \r\n                        </Form.Check>\r\n                    </Form.Group>\r\n                    \r\n                    \r\n                  <Button type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n             \r\n               </FormContainer>\r\n\r\n            )}\r\n            \r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\ProductListScreen.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\ProductEditScreen.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\screens\\OrderListScreen.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\ProductCarousel.js",[],"C:\\Users\\srkon\\OneDrive\\Desktop\\TechShop\\frontend\\src\\components\\Meta.js",[],{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":4,"column":26,"nodeType":"205","messageId":"206","endLine":4,"endColumn":32},{"ruleId":"203","severity":1,"message":"207","line":5,"column":20,"nodeType":"205","messageId":"206","endLine":5,"endColumn":24},{"ruleId":"203","severity":1,"message":"208","line":5,"column":25,"nodeType":"205","messageId":"206","endLine":5,"endColumn":36},{"ruleId":"203","severity":1,"message":"209","line":5,"column":37,"nodeType":"205","messageId":"206","endLine":5,"endColumn":43},{"ruleId":"203","severity":1,"message":"210","line":1,"column":26,"nodeType":"205","messageId":"206","endLine":1,"endColumn":34},{"ruleId":"203","severity":1,"message":"211","line":2,"column":9,"nodeType":"205","messageId":"206","endLine":2,"endColumn":15},{"ruleId":"203","severity":1,"message":"212","line":4,"column":9,"nodeType":"205","messageId":"206","endLine":4,"endColumn":18},{"ruleId":"203","severity":1,"message":"213","line":3,"column":46,"nodeType":"205","messageId":"206","endLine":3,"endColumn":59},{"ruleId":"203","severity":1,"message":"214","line":3,"column":67,"nodeType":"205","messageId":"206","endLine":3,"endColumn":76},{"ruleId":"203","severity":1,"message":"215","line":2,"column":9,"nodeType":"205","messageId":"206","endLine":2,"endColumn":13},{"ruleId":"216","severity":1,"message":"217","line":48,"column":9,"nodeType":"218","endLine":48,"endColumn":41,"suggestions":"219"},{"ruleId":"203","severity":1,"message":"220","line":2,"column":8,"nodeType":"205","messageId":"206","endLine":2,"endColumn":17},{"ruleId":"203","severity":1,"message":"221","line":218,"column":15,"nodeType":"205","messageId":"206","endLine":218,"endColumn":19},{"ruleId":"203","severity":1,"message":"222","line":2,"column":46,"nodeType":"205","messageId":"206","endLine":2,"endColumn":53},{"ruleId":"203","severity":1,"message":"223","line":6,"column":129,"nodeType":"205","messageId":"206","endLine":6,"endColumn":145},{"ruleId":"203","severity":1,"message":"222","line":4,"column":46,"nodeType":"205","messageId":"206","endLine":4,"endColumn":53},{"ruleId":"203","severity":1,"message":"224","line":17,"column":13,"nodeType":"205","messageId":"206","endLine":17,"endColumn":21},{"ruleId":"203","severity":1,"message":"225","line":17,"column":22,"nodeType":"205","messageId":"206","endLine":17,"endColumn":33},{"ruleId":"203","severity":1,"message":"226","line":19,"column":13,"nodeType":"205","messageId":"206","endLine":19,"endColumn":20},{"ruleId":"203","severity":1,"message":"227","line":19,"column":21,"nodeType":"205","messageId":"206","endLine":19,"endColumn":31},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'Helmet' is defined but never used.","'Container' is defined but never used.","'ListGroupItem' is defined but never used.","'FormGroup' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'success'. Either include it or remove the dependency array.","ArrayExpression",["230"],"'PropTypes' is defined but never used.","'data' is assigned a value but never used.","'NavLink' is defined but never used.","'ORDER_LIST_RESET' is defined but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"231","fix":"232"},"Update the dependencies array to be: [dispatch, history, userInfo, user, success]",{"range":"233","text":"234"},[1770,1802],"[dispatch, history, userInfo, user, success]"]